\relax 
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Comparison of the proposed StackGAN and the proposed vanilla one-stage GAN for generating 256x256 images. (a) Given text descriptions, Stage-I of StackGAN sketches rough shapes and basic colors of objects, yielding low-resolution images. (b) Stage-II of StackGAN takes Stage-I results and text descriptions as inputs, and generates high-resolution images with photo-realistic details. (c) Results by a vanilla 256x256 GAN which simply adds more upsampling layers to state-of-the-art GAN-INT-CLS. It is un- able to generate any plausible images of 256x256 resolution. \relax }}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Related Work}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Stacked Generative Adversarial Networks}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Preliminaries }{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Conditioning Augmentation}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Stage-I GAN}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The architecture of the proposed StackGAN. The Stage-I generator draws a low-resolution image by sketching rough shape and basic colors of the object from the given text and painting the background from a random noise vector. Conditioned on Stage-I results, the Stage-II generator corrects defects and adds compelling details into Stage-I results, yielding a more realistic high-resolution image.\relax }}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Stage-II GAN}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}Implementation details}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Experiments}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Datasets and evaluation metrics }{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Quantitative and qualitative results}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Example results by our StackGAN, GAWWN, and GAN-INT-CLS conditioned on text descriptions from CUB test set.\relax }}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Example results by our StackGAN and GAN-INT-CLS conditioned on text descriptions from Oxford-102 test set (leftmost four columns) and COCO validation set (rightmost four columns).\relax }}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Samples generated by our StackGAN from unseen texts in CUB test set. Each column lists the text description, images generated from the text by Stage-I and Stage-II of StackGAN.\relax }}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces For generated images (column 1), retrieving their nearest training images (columns 2-6) by utilizing Stage-II discriminator D to extract visual features. The L2 distances between features are calculated for nearest-neighbor retrieval.\relax }}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Component analysis}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Conditioning Augmentation (CA) helps stabilize the training of conditional GAN and improves the diversity of the gen- erated samples. (Row 1) without CA, Stage-I GAN fails to gen- erate plausible 256x256 samples. Although different noise vector z is used for each column, the generated samples collapse to be the same for each input text description. (Row 2-3) with CA but fixing the noise vectors z, methods are still able to generate birds with different poses and viewpoints.\relax }}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces (Left to right) Images generated by interpolating two sen- tence embeddings. Gradual appearance changes from the first sen- tence\IeC {\textquoteright }s meaning to that of the second sentence can be observed. The noise vector z is fixed to be zeros for each row.\relax }}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Conclusions }{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
\bibcite{d}{1}
\bibcite{d}{2}
\bibcite{d}{3}
\bibcite{d}{4}
\bibcite{d}{5}
\bibcite{d}{6}
\bibcite{d}{7}
\bibcite{d}{8}
\bibcite{d}{9}
\bibcite{d}{10}
\bibcite{d}{11}
\bibcite{d}{12}
\bibcite{d}{13}
\bibcite{d}{14}
\bibcite{d}{15}
\bibcite{d}{16}
\bibcite{d}{17}
\@writefile{toc}{\contentsline {section}{\numberline {6}REFERENCES}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Supplementary Materials}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}More Results of Birds and Flowers}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2}Failure Cases}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.2.1}CUB failure cases:}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.2.2}Oxford-102 failure cases:}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3}Beyond Birds and Flowers: Results on MS COCO}{}}
\@writefile{toc}{\contentsline {paragraph}{}{}}
